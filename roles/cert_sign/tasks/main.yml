- name: include sites-names
  include_vars:
     file: sites_names
     name: names
      
- name: check names
  debug:
    msg: "{{ names }}"

- name: create dir for storing info 
  file:
    path: "out/{{item}}"
    state: directory    
  with_items:
    "{{ folders }}"

- name: create PK for our items
  openssl_privatekey:
    path: "{{playbook_dir}}/out/pk/{{item}}.pem"
    passphrase: "{{ secretfraze }}"
    cipher: aes256
  with_items:
    "{{ names }}"

- name: create CSRs
  openssl_csr:
    path: "{{playbook_dir}}/out/csr/{{item}}.csr"
    privatekey_path: "{{playbook_dir}}/out/pk/{{item}}.pem"
    privatekey_passphrase : "{{ secretfraze }}"
    common_name: "{{ item }}"
    country_name: "{{ cert_defaults.country_name }}"
    email_address: "{{ cert_defaults.email_address }}"
    organization_name: "{{ cert_defaults.organization_name }}"
    organizational_unit_name: "{{ cert_defaults.organizational_unit_name }}"
  with_items:
    "{{ names }}"

- name: prepare v3 extensions for certificates
  template:
    src: v3_ext.j2
    dest: "out/v3/{{item}}.ext"
  with_items:
    "{{ names }}"

- name: sign certificates
  shell: 
    "openssl x509 -req -in {{playbook_dir}}/out/csr/{{item}}.csr 
                       -CA {{playbook_dir}}/out/CA.crt 
                       -CAkey {{playbook_dir}}/out/CA.pem 
                       -CAcreateserial 
                       -out {{playbook_dir}}/out/crt/{{item}}.crt 
                       -days 365 
                       -passin pass:{{secretfraze}} 
                       -extfile {{playbook_dir}}/out/v3/{{item}}.ext"
  args:
    creates: "{{playbook_dir}}/out/crt/{{item}}.crt"    
  with_items:
    "{{ names }}"

- name: clean the mess
  file:
    path: "{{item}}/"
    state: absent
  with_items:
    "{{ delete_folders}}"
      
- name: create no pass certs for nginx starts without password prompt
  shell: 
    "openssl rsa -in {{playbook_dir}}/out/pk/{{item}}.pem 
                 -out {{playbook_dir}}/out/pk/{{item}}.nopass.pem 
                 -passin pass:{{secretfraze}}"
  with_items:
   "{{ names }}"

#- name: create cert for browsers
#  shell: "openssl pkcs12 -export -in out/crt/{{item}}.crt -inkey out/pk/{{item}}.nopass.pem -certfile out/CA.crt -out out/pkcs12/{{item}}.p12 -passout pass:{{secretfraze}}"
#  with_items:
#    "{{ names }}"        

   
